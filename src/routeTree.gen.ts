/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ApplicationsRouteImport } from './routes/applications'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ApplicationApplicationIdRouteImport } from './routes/application.$applicationId'

const ApplicationsRoute = ApplicationsRouteImport.update({
  id: '/applications',
  path: '/applications',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApplicationApplicationIdRoute =
  ApplicationApplicationIdRouteImport.update({
    id: '/application/$applicationId',
    path: '/application/$applicationId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/applications': typeof ApplicationsRoute
  '/application/$applicationId': typeof ApplicationApplicationIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/applications': typeof ApplicationsRoute
  '/application/$applicationId': typeof ApplicationApplicationIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/applications': typeof ApplicationsRoute
  '/application/$applicationId': typeof ApplicationApplicationIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/applications' | '/application/$applicationId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/applications' | '/application/$applicationId'
  id: '__root__' | '/' | '/applications' | '/application/$applicationId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApplicationsRoute: typeof ApplicationsRoute
  ApplicationApplicationIdRoute: typeof ApplicationApplicationIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/applications': {
      id: '/applications'
      path: '/applications'
      fullPath: '/applications'
      preLoaderRoute: typeof ApplicationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/application/$applicationId': {
      id: '/application/$applicationId'
      path: '/application/$applicationId'
      fullPath: '/application/$applicationId'
      preLoaderRoute: typeof ApplicationApplicationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApplicationsRoute: ApplicationsRoute,
  ApplicationApplicationIdRoute: ApplicationApplicationIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
